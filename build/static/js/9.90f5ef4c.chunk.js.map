{"version":3,"sources":["../../../src/form-label.tsx","../../../src/use-checkbox.ts","../../../src/switch.tsx","components/Chat/NewRoom.js"],"names":["FormLabel","forwardRef","styles","useStyleConfig","props","omitThemingProps","requiredIndicator","field","useFormControlContext","className","cx","__css","display","textAlign","RequiredIndicator","useStyles","useCheckbox","defaultChecked","isChecked","ariaDescribedBy","onChangeProp","useCallbackRef","onBlurProp","onFocusProp","useBoolean","inputRef","useRef","useState","useControllableProp","warn","condition","message","handleChange","useCallback","event","isReadOnly","setCheckedState","isIndeterminate","useSafeLayoutEffect","Boolean","trulyDisabled","isDisabled","onKeyDown","setActive","onKeyUp","getCheckboxProps","forwardedRef","ref","dataAttr","onMouseDown","callAllHandlers","onMouseUp","onMouseEnter","setHovered","onMouseLeave","getRootProps","mergeRefs","node","setRootIsLabelElement","onClick","focus","nextTick","htmlProps","getInputProps","type","name","value","id","onChange","onBlur","setFocused","onFocus","scheduleMicrotask","required","checked","disabled","readOnly","ariaInvalid","style","visuallyHiddenStyle","getLabelProps","onTouchStart","isInvalid","state","isFocused","isActive","isHovered","isRequired","stopEvent","Switch","useMultiStyleConfig","spacing","children","containerStyles","verticalAlign","lineHeight","trackStyles","flexShrink","justifyContent","boxSizing","cursor","labelStyles","userSelect","marginStart","data-checked","data-hover","CardWithIllustration","history","useHistory","room","setroom","ispublic","setispublic","toast","useToast","boxShadow","bg","useColorModeValue","rounded","p","align","as","NotificationIcon","w","h","textTransform","fontSize","color","direction","base","md","placeholder","e","target","toLowerCase","border","_focus","outline","alignItems","htmlFor","mb","prev","flex","_hover","api","post","replace","then","res","title","description","status","duration","isClosable","push","catch","err","borderRadius","mt","RoomList","createIcon","displayName","viewBox","path","x","y","fill","width","height","cy","r","d"],"mappings":"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","file":"static/js/9.90f5ef4c.chunk.js","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  useStyles,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { useFormControlContext } from \"./form-control\"\n\nexport interface FormLabelProps\n  extends HTMLChakraProps<\"label\">,\n    ThemingProps<\"FormLabel\"> {\n  /**\n   * @type React.ReactElement\n   */\n  requiredIndicator?: React.ReactElement\n}\n\n/**\n * Used to enhance the usability of form controls.\n *\n * It is used to inform users as to what information\n * is requested for a form field.\n *\n * ♿️ Accessibility: Every form field should have a form label.\n */\nexport const FormLabel = forwardRef<FormLabelProps, \"label\">(\n  (passedProps, ref) => {\n    const styles = useStyleConfig(\"FormLabel\", passedProps)\n    const props = omitThemingProps(passedProps)\n\n    const {\n      className,\n      children,\n      requiredIndicator = <RequiredIndicator />,\n      ...rest\n    } = props\n\n    const field = useFormControlContext()\n\n    return (\n      <chakra.label\n        {...field?.getLabelProps(rest, ref)}\n        className={cx(\"chakra-form__label\", props.className)}\n        __css={{\n          display: \"block\",\n          textAlign: \"start\",\n          ...styles,\n        }}\n      >\n        {children}\n        {field?.isRequired ? requiredIndicator : null}\n      </chakra.label>\n    )\n  },\n)\n\nif (__DEV__) {\n  FormLabel.displayName = \"FormLabel\"\n}\n\nexport interface RequiredIndicatorProps extends HTMLChakraProps<\"span\"> {}\n\n/**\n * Used to show a \"required\" text or an asterisks (*) to indicate that\n * a field is required.\n */\nexport const RequiredIndicator = forwardRef<RequiredIndicatorProps, \"span\">(\n  (props, ref) => {\n    const field = useFormControlContext()\n    const styles = useStyles()\n\n    if (!field?.isRequired) return null\n\n    const className = cx(\"chakra-form__required-indicator\", props.className)\n\n    return (\n      <chakra.span\n        {...field?.getRequiredIndicatorProps(props, ref)}\n        __css={styles.requiredIndicator}\n        className={className}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  RequiredIndicator.displayName = \"RequiredIndicator\"\n}\n","import {\n  useBoolean,\n  useCallbackRef,\n  useControllableProp,\n  useSafeLayoutEffect,\n} from \"@chakra-ui/hooks\"\nimport { mergeRefs, PropGetter } from \"@chakra-ui/react-utils\"\nimport {\n  callAllHandlers,\n  dataAttr,\n  focus,\n  scheduleMicrotask,\n  warn,\n} from \"@chakra-ui/utils\"\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\"\nimport React, {\n  ChangeEvent,\n  KeyboardEvent,\n  useCallback,\n  useRef,\n  useState,\n} from \"react\"\n\nexport interface UseCheckboxProps {\n  /**\n   * If `true`, the checkbox will be checked.\n   * You'll need to pass `onChange` to update its value (since it is now controlled)\n   */\n  isChecked?: boolean\n  /**\n   * If `true`, the checkbox will be indeterminate.\n   * This only affects the icon shown inside checkbox\n   * and does not modify the isChecked property.\n   */\n  isIndeterminate?: boolean\n  /**\n   * If `true`, the checkbox will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and `isDisabled` is passed, the checkbox will\n   * remain tabbable but not interactive\n   */\n  isFocusable?: boolean\n  /**\n   * If `true`, the checkbox will be readonly\n   */\n  isReadOnly?: boolean\n  /**\n   * If `true`, the checkbox is marked as invalid.\n   * Changes style of unchecked state.\n   */\n  isInvalid?: boolean\n  /**\n   * If `true`, the checkbox input is marked as required,\n   * and `required` attribute will be added\n   */\n  isRequired?: boolean\n  /**\n   * If `true`, the checkbox will be initially checked.\n   * @deprecated Please use the `defaultChecked` prop, which mirrors default\n   * React checkbox behavior.\n   */\n  defaultIsChecked?: boolean\n  /**\n   * If `true`, the checkbox will be initially checked.\n   */\n  defaultChecked?: boolean\n  /**\n   * The callback invoked when the checked state of the `Checkbox` changes..\n   */\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void\n  /**\n   * The callback invoked when the checkbox is blurred (loses focus)\n   */\n  onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void\n  /**\n   * The callback invoked when the checkbox is focused\n   */\n  onFocus?: (event: React.FocusEvent<HTMLInputElement>) => void\n  /**\n   * The name of the input field in a checkbox\n   * (Useful for form submission).\n   */\n  name?: string\n  /**\n   * The value to be used in the checkbox input.\n   * This is the value that will be returned on form submission.\n   */\n  value?: string | number\n  /**\n   * id assigned to input\n   */\n  id?: string\n  /**\n   * Defines the string that labels the checkbox element.\n   */\n  \"aria-label\"?: string\n  /**\n   * Refers to the `id` of the element that labels the checkbox element.\n   */\n  \"aria-labelledby\"?: string\n  \"aria-invalid\"?: true | undefined\n  \"aria-describedby\"?: string\n}\n\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/docs/form/checkbox#hooks\n */\nexport function useCheckbox(props: UseCheckboxProps = {}) {\n  const {\n    defaultIsChecked,\n    defaultChecked = defaultIsChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    onChange,\n    isIndeterminate,\n    isInvalid,\n    name,\n    value,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    \"aria-describedby\": ariaDescribedBy,\n    ...htmlProps\n  } = props\n\n  const onChangeProp = useCallbackRef(onChange)\n  const onBlurProp = useCallbackRef(onBlur)\n  const onFocusProp = useCallbackRef(onFocus)\n\n  const [isFocused, setFocused] = useBoolean()\n  const [isHovered, setHovered] = useBoolean()\n  const [isActive, setActive] = useBoolean()\n\n  const inputRef = useRef<HTMLInputElement>(null)\n  const [rootIsLabelElement, setRootIsLabelElement] = useState(true)\n\n  const [checkedState, setCheckedState] = useState(!!defaultChecked)\n\n  const [isControlled, isChecked] = useControllableProp(\n    checkedProp,\n    checkedState,\n  )\n\n  warn({\n    condition: !!defaultIsChecked,\n    message:\n      'The \"defaultIsChecked\" prop has been deprecated and will be removed in a future version. ' +\n      'Please use the \"defaultChecked\" prop instead, which mirrors default React checkbox behavior.',\n  })\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      if (isReadOnly || isDisabled) {\n        event.preventDefault()\n        return\n      }\n\n      if (!isControlled) {\n        if (isChecked) {\n          setCheckedState(event.target.checked)\n        } else {\n          setCheckedState(isIndeterminate ? true : event.target.checked)\n        }\n      }\n\n      onChangeProp?.(event)\n    },\n    [\n      isReadOnly,\n      isDisabled,\n      isChecked,\n      isControlled,\n      isIndeterminate,\n      onChangeProp,\n    ],\n  )\n\n  useSafeLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate)\n    }\n  }, [isIndeterminate])\n\n  const trulyDisabled = isDisabled && !isFocusable\n\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive.on()\n      }\n    },\n    [setActive],\n  )\n\n  const onKeyUp = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.key === \" \") {\n        setActive.off()\n      }\n    },\n    [setActive],\n  )\n\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current) return\n    const notInSync = inputRef.current.checked !== isChecked\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked)\n    }\n  }, [inputRef.current])\n\n  const getCheckboxProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => {\n      const onPressDown = (event: React.MouseEvent) => {\n        // On mousedown, the input blurs and returns focus to the `body`,\n        // we need to prevent this. Native checkboxes keeps focus on `input`\n        event.preventDefault()\n        setActive.on()\n      }\n\n      return {\n        ...props,\n        ref: forwardedRef,\n        \"data-active\": dataAttr(isActive),\n        \"data-hover\": dataAttr(isHovered),\n        \"data-checked\": dataAttr(isChecked),\n        \"data-focus\": dataAttr(isFocused),\n        \"data-indeterminate\": dataAttr(isIndeterminate),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(isInvalid),\n        \"data-readonly\": dataAttr(isReadOnly),\n        \"aria-hidden\": true,\n        onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n        onMouseUp: callAllHandlers(props.onMouseUp, setActive.off),\n        onMouseEnter: callAllHandlers(props.onMouseEnter, setHovered.on),\n        onMouseLeave: callAllHandlers(props.onMouseLeave, setHovered.off),\n      }\n    },\n    [\n      isActive,\n      isChecked,\n      isDisabled,\n      isFocused,\n      isHovered,\n      isIndeterminate,\n      isInvalid,\n      isReadOnly,\n      setActive,\n      setHovered.off,\n      setHovered.on,\n    ],\n  )\n\n  const getRootProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...htmlProps,\n      ...props,\n      ref: mergeRefs(forwardedRef, (node: HTMLElement) => {\n        if (!node) return\n        setRootIsLabelElement(node.tagName === \"LABEL\")\n      }),\n      onClick: callAllHandlers(props.onClick, () => {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          inputRef.current?.click()\n          focus(inputRef.current, { nextTick: true })\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n    }),\n    [htmlProps, isDisabled, rootIsLabelElement],\n  )\n\n  const getInputProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => {\n      const onFocus = () => {\n        scheduleMicrotask(setFocused.on)\n      }\n      return {\n        ...props,\n        ref: mergeRefs(inputRef, forwardedRef),\n        type: \"checkbox\",\n        name,\n        value,\n        id,\n        onChange: callAllHandlers(props.onChange, handleChange),\n        onBlur: callAllHandlers(props.onBlur, onBlurProp, setFocused.off),\n        onFocus: callAllHandlers(props.onFocus, onFocusProp, onFocus),\n        onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n        onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n        required: isRequired,\n        checked: isChecked,\n        disabled: trulyDisabled,\n        readOnly: isReadOnly,\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n        \"aria-describedby\": ariaDescribedBy,\n        \"aria-disabled\": isDisabled,\n        style: visuallyHiddenStyle,\n      }\n    },\n    [\n      name,\n      value,\n      id,\n      handleChange,\n      setFocused.off,\n      setFocused.on,\n      onBlurProp,\n      onFocusProp,\n      onKeyDown,\n      onKeyUp,\n      isRequired,\n      isChecked,\n      trulyDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      ariaInvalid,\n      isInvalid,\n      ariaDescribedBy,\n      isDisabled,\n    ],\n  )\n\n  const getLabelProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      onTouchStart: callAllHandlers(props.onTouchStart, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid),\n    }),\n    [isChecked, isDisabled, isInvalid],\n  )\n\n  return {\n    state: {\n      isInvalid,\n      isFocused,\n      isChecked,\n      isActive,\n      isHovered,\n      isIndeterminate,\n      isDisabled,\n      isReadOnly,\n      isRequired,\n    },\n    getRootProps,\n    getCheckboxProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps,\n  }\n}\n\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\nfunction stopEvent(event: React.SyntheticEvent) {\n  event.preventDefault()\n  event.stopPropagation()\n}\n\nexport type UseCheckboxReturn = ReturnType<typeof useCheckbox>\n","import { useCheckbox, UseCheckboxProps } from \"@chakra-ui/checkbox\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { cx, dataAttr, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface SwitchProps\n  extends Omit<UseCheckboxProps, \"isIndeterminate\">,\n    Omit<HTMLChakraProps<\"label\">, keyof UseCheckboxProps>,\n    ThemingProps<\"Switch\"> {\n  /**\n   * The spacing between the switch and its label text\n   * @default 0.5rem\n   * @type SystemProps[\"marginLeft\"]\n   */\n  spacing?: SystemProps[\"marginLeft\"]\n}\n\nexport const Switch = forwardRef<SwitchProps, \"input\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Switch\", props)\n\n  const { spacing = \"0.5rem\", children, ...ownProps } = omitThemingProps(props)\n\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getRootProps,\n    getLabelProps,\n  } = useCheckbox(ownProps)\n\n  const containerStyles: SystemStyleObject = React.useMemo(\n    () => ({\n      display: \"inline-block\",\n      verticalAlign: \"middle\",\n      lineHeight: \"normal\",\n      ...styles.container,\n    }),\n    [styles.container],\n  )\n\n  const trackStyles: SystemStyleObject = React.useMemo(\n    () => ({\n      display: \"inline-flex\",\n      flexShrink: 0,\n      justifyContent: \"flex-start\",\n      boxSizing: \"content-box\",\n      cursor: \"pointer\",\n      ...styles.track,\n    }),\n    [styles.track],\n  )\n\n  const labelStyles: SystemStyleObject = React.useMemo(\n    () => ({\n      userSelect: \"none\",\n      marginStart: spacing,\n      ...styles.label,\n    }),\n    [spacing, styles.label],\n  )\n\n  return (\n    <chakra.label\n      {...getRootProps()}\n      className={cx(\"chakra-switch\", props.className)}\n      __css={containerStyles}\n    >\n      <input className=\"chakra-switch__input\" {...getInputProps({}, ref)} />\n      <chakra.span\n        {...getCheckboxProps()}\n        className=\"chakra-switch__track\"\n        __css={trackStyles}\n      >\n        <chakra.span\n          __css={styles.thumb}\n          className=\"chakra-switch__thumb\"\n          data-checked={dataAttr(state.isChecked)}\n          data-hover={dataAttr(state.isHovered)}\n        />\n      </chakra.span>\n      {children && (\n        <chakra.span\n          className=\"chakra-switch__label\"\n          {...getLabelProps()}\n          __css={labelStyles}\n        >\n          {children}\n        </chakra.span>\n      )}\n    </chakra.label>\n  )\n})\n\nif (__DEV__) {\n  Switch.displayName = \"Switch\"\n}\n","import {\n    Stack,\n    Heading,\n    Text,\n    Input,\n    Button,\n    Icon,\n    useColorModeValue,\n    createIcon,\n    FormControl,\n    FormLabel,\n    Switch,\n    GridItem,\n} from '@chakra-ui/react';\nimport React, { useState } from 'react'\nimport api from '../../adaptor/api';\nimport { useHistory } from 'react-router-dom'\nimport { useToast } from \"@chakra-ui/react\"\nimport RoomList from './RoomList';\n\nexport default function CardWithIllustration() {\n    const history = useHistory();\n    const [room, setroom] = useState(\"\")\n    const [ispublic, setispublic] = useState(false)\n    const toast = useToast()\n\n    const joinRoom = () => {\n        api.post('chat/room/', { 'name': room.replace(/\\s/g, '_'), 'public': ispublic })\n            .then(res => {\n                toast({\n                    title: \"room created\",\n                    description: \"enjoy chatting\",\n                    status: \"success\",\n                    duration: 9000,\n                    isClosable: true,\n                })\n                history.push(`/${room.replace(/\\s/g, '_')}`)\n            })\n            .catch(err => {\n                toast({\n                    title: \"can't be created\",\n                    description: \"room name already exists\",\n                    status: \"error\",\n                    duration: 9000,\n                    isClosable: true,\n                })\n            })\n    }\n    return (\n        <>\n            <Stack\n                boxShadow={'2xl'}\n                bg={useColorModeValue('white', 'gray.700')}\n                rounded={'xl'}\n                p={10}\n                spacing={8}\n                align={'center'}>\n                <Icon as={NotificationIcon} w={24} h={24} />\n                <Stack align={'center'} spacing={2}>\n                    <Heading\n                        textTransform={'uppercase'}\n                        fontSize={'3xl'}\n                        color={useColorModeValue('gray.800', 'gray.200')}>\n                        Chat\n          </Heading>\n                    <Text fontSize={'lg'} color={'gray.500'}>\n                        Create or Join a room to start chatting\n          </Text>\n                </Stack>\n                <Stack spacing={4} direction={{ base: 'column', md: 'row' }} w={'full'}>\n                    <Input\n                        type={'text'}\n                        name=\"room\"\n                        placeholder={'room name'}\n                        value={room}\n                        onChange={(e) => setroom(e.target.value.toLowerCase())}\n                        color={useColorModeValue('gray.800', 'gray.200')}\n                        bg={useColorModeValue('gray.100', 'gray.600')}\n                        rounded={'full'}\n                        border={0}\n                        _focus={{\n                            bg: useColorModeValue('gray.200', 'gray.800'),\n                            outline: 'none',\n                        }}\n                    />\n                    <FormControl display=\"flex\" alignItems=\"center\" >\n                        <FormLabel htmlFor=\"email-alerts\" mb=\"0\">\n                            Make it public?\n  </FormLabel>\n                        <Switch id=\"email-alerts\" value={ispublic} onChange={(e) => {\n                            setispublic(prev => !prev)\n                            // console.log(e.target.value)\n                        }} />\n                    </FormControl>\n                    <Button\n                        bg={'blue.400'}\n                        rounded={'full'}\n                        color={'white'}\n                        flex={'1 0 auto'}\n                        _hover={{ bg: 'blue.500' }}\n                        _focus={{ bg: 'blue.500' }}\n                        onClick={joinRoom}\n                    >\n                        join\n          </Button>\n                </Stack>\n\n            </Stack>\n            <GridItem display={{ base: \"block\", md: \"none\" }}>\n                <Text bg=\"Highlight\" borderRadius=\"10\" mt=\"4\" >\n                    All rooms\n                </Text>\n                <RoomList />\n            </GridItem>\n        </>\n    );\n}\n\nconst NotificationIcon = createIcon({\n    displayName: 'Notification',\n    viewBox: '0 0 128 128',\n    path: (\n        <g id=\"Notification\">\n            <rect\n                className=\"cls-1\"\n                x=\"1\"\n                y=\"45\"\n                fill={'#fbcc88'}\n                width=\"108\"\n                height=\"82\"\n            />\n            <circle className=\"cls-2\" fill={'#8cdd79'} cx=\"105\" cy=\"86\" r=\"22\" />\n            <rect\n                className=\"cls-3\"\n                fill={'#f6b756'}\n                x=\"1\"\n                y=\"122\"\n                width=\"108\"\n                height=\"5\"\n            />\n            <path\n                className=\"cls-4\"\n                fill={'#7ece67'}\n                d=\"M105,108A22,22,0,0,1,83.09,84a22,22,0,0,0,43.82,0A22,22,0,0,1,105,108Z\"\n            />\n            <path\n                fill={'#f6b756'}\n                className=\"cls-3\"\n                d=\"M109,107.63v4A22,22,0,0,1,83.09,88,22,22,0,0,0,109,107.63Z\"\n            />\n            <path\n                className=\"cls-5\"\n                fill={'#d6ac90'}\n                d=\"M93,30l16,15L65.91,84.9a16,16,0,0,1-21.82,0L1,45,17,30Z\"\n            />\n            <path\n                className=\"cls-6\"\n                fill={'#cba07a'}\n                d=\"M109,45,65.91,84.9a16,16,0,0,1-21.82,0L1,45l2.68-2.52c43.4,40.19,41.54,39.08,45.46,40.6A16,16,0,0,0,65.91,79.9l40.41-37.42Z\"\n            />\n            <path\n                className=\"cls-7\"\n                fill={'#dde1e8'}\n                d=\"M93,1V59.82L65.91,84.9a16,16,0,0,1-16.77,3.18C45.42,86.64,47,87.6,17,59.82V1Z\"\n            />\n            <path\n                className=\"cls-8\"\n                fill={'#c7cdd8'}\n                d=\"M74,56c-3.56-5.94-3-10.65-3-17.55a16.43,16.43,0,0,0-12.34-16,5,5,0,1,0-7.32,0A16,16,0,0,0,39,38c0,7.13.59,12-3,18a3,3,0,0,0,0,6H50.41a5,5,0,1,0,9.18,0H74a3,3,0,0,0,0-6ZM53.2,21.37a3,3,0,1,1,3.6,0,1,1,0,0,0-.42.7,11.48,11.48,0,0,0-2.77,0A1,1,0,0,0,53.2,21.37Z\"\n            />\n            <path\n                className=\"cls-3\"\n                fill={'#f6b756'}\n                d=\"M46.09,86.73,3,127H1v-1c6-5.62-1.26,1.17,43.7-40.78A1,1,0,0,1,46.09,86.73Z\"\n            />\n            <path\n                className=\"cls-3\"\n                fill={'#f6b756'}\n                d=\"M109,126v1h-2L63.91,86.73a1,1,0,0,1,1.39-1.49C111,127.85,103.11,120.51,109,126Z\"\n            />\n            <path\n                className=\"cls-8\"\n                fill={'#c7cdd8'}\n                d=\"M93,54.81v5L65.91,84.9a16,16,0,0,1-16.77,3.18C45.42,86.64,47,87.6,17,59.82v-5L44.09,79.9a16,16,0,0,0,21.82,0Z\"\n            />\n            <path\n                className=\"cls-9\"\n                fill={'#fff'}\n                d=\"M101,95c-.59,0-.08.34-8.72-8.3a1,1,0,0,1,1.44-1.44L101,92.56l15.28-15.28a1,1,0,0,1,1.44,1.44C100.21,96.23,101.6,95,101,95Z\"\n            />\n            <path\n                className=\"cls-3\"\n                fill={'#f6b756'}\n                d=\"M56.8,18.38a3,3,0,1,0-3.6,0A1,1,0,0,1,52,20,5,5,0,1,1,58,20,1,1,0,0,1,56.8,18.38Z\"\n            />\n            <path\n                className=\"cls-1\"\n                fill={'#fbcc88'}\n                d=\"M71,42.17V35.45c0-8.61-6.62-16-15.23-16.43A16,16,0,0,0,39,35c0,7.33.58,12-3,18H74A21.06,21.06,0,0,1,71,42.17Z\"\n            />\n            <path\n                className=\"cls-3\"\n                fill={'#f6b756'}\n                d=\"M74,53H36a21.36,21.36,0,0,0,1.86-4H72.14A21.36,21.36,0,0,0,74,53Z\"\n            />\n            <path className=\"cls-3\" fill={'#f6b756'} d=\"M59.59,59a5,5,0,1,1-9.18,0\" />\n            <path\n                className=\"cls-1\"\n                fill={'#fbcc88'}\n                d=\"M74,59H36a3,3,0,0,1,0-6H74a3,3,0,0,1,0,6Z\"\n            />\n        </g>\n    ),\n});"],"sourceRoot":""}