{"version":3,"sources":["../../../src/form-control.tsx","../node_modules/warning/warning.js","../../../src/use-boolean.ts","../../../src/icons.tsx","../../../src/alert.tsx","../../../src/close-button.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.js","../node_modules/framer-motion/dist/es/utils/use-force-update.js","../node_modules/@reach/visually-hidden/dist/reach-visually-hidden.esm.js","../node_modules/@reach/utils/dist/reach-utils.esm.js","../node_modules/@reach/alert/dist/reach-alert.esm.js","../../../src/toast.utils.ts","../../../src/toast.tsx","../../../src/use-timeout.ts","../../../src/toast-manager.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../../../src/toast.class.tsx","../../../src/use-toast.tsx","../../../src/use-form-control.ts","../../../src/input.tsx"],"names":["createContext","strict","name","FormControl","forwardRef","styles","useMultiStyleConfig","props","id","isReadOnly","uuid","useId","idProp","labelId","feedbackId","helpTextId","React","useBoolean","getHelpTextProps","forwardedRef","ref","mergeRefs","node","setHasHelpText","getLabelProps","dataAttr","htmlFor","isDisabled","isFocused","isInvalid","getErrorMessageProps","setHasFeedbackText","getRootProps","role","getRequiredIndicatorProps","children","onFocus","scheduleMicrotask","setFocus","isRequired","onBlur","hasFeedbackText","hasHelpText","htmlProps","useFormControlProvider","omitThemingProps","className","cx","contextValue","value","__css","width","position","FormHelperText","field","useFormControlContext","useStyles","warning","module","exports","initialState","useState","on","useCallback","setValue","off","toggle","prev","WarningIcon","viewBox","fill","d","STATUSES","info","icon","colorScheme","success","error","errorMessage","Alert","status","alertStyles","display","alignItems","overflow","AlertTitle","title","AlertDescription","descriptionStyles","AlertIcon","useAlertContext","BaseIcon","w","h","CloseIcon","focusable","aria-hidden","CloseButton","useStyleConfig","type","aria-label","disabled","outline","justifyContent","flexShrink","height","_defineProperties","target","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_getPrototypeOf","getPrototypeOf","_typeof","obj","Symbol","iterator","constructor","prototype","_possibleConstructorReturn","call","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","result","Super","NewTarget","this","arguments","apply","presenceId","getPresenceId","PresenceChild","_a","initial","isPresent","onExitComplete","custom","presenceAffectsLayout","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","allComplete","forEach","isComplete","register","delete","undefined","_","size","PresenceContext","Provider","Map","getChildKey","child","AnimatePresence","_b","exitBeforeEnter","_c","forceRender","unloadingRef","useRef","__read","forcedRenderCount","setForcedRenderCount","useUnmountEffect","current","useForceUpdate","layoutContext","useContext","SharedLayoutContext","isSharedLayout","forceUpdate","isInitialRender","filteredChildren","filtered","Children","isValidElement","push","onlyElements","presentChildren","allChildren","exiting","Set","updateChildLookup","map","childrenToRender","__spreadArray","presentKeys","targetKeys","numPresent","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","_extends","assign","source","hasOwnProperty","VisuallyHidden","_ref","_ref$as","as","Comp","_ref$style","style","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","createElement","border","clip","margin","padding","whiteSpace","wordWrap","canUseDOM","useLayoutEffect","useEffect","fbWarning","window","Math","assignRef","isFunction","Error","document","forwardRefWithAs","render","getOwnerDocument","element","ownerDocument","renderTimer","polite","assertive","elements","liveRegions","createMirror","doc","mount","renderAlerts","setAttribute","body","appendChild","update","unmount","clearTimeout","setTimeout","elementType","regionType","_ref$type","ownRef","_len4","refs","Array","_key4","every","concat","useForkedRef","prevType","usePrevious","mirror","mounted","useMirrorEffects","findToast","toasts","getToastPosition","index","toast","toastMotionVariants","dir","includes","factor","opacity","animate","y","x","scale","transition","duration","ease","exit","Toast","requestClose","useIsPresent","useUpdateEffect","onCloseComplete","setDelay","close","onRequestRemove","fn","useCallbackRef","timeoutId","delay","useTimeout","flexDirection","getToastStyle","motion","layout","variants","onHoverStart","onHoverEnd","pointerEvents","maxWidth","minWidth","message","onClose","subClass","superClass","TypeError","create","Constructor","protoProps","staticProps","top","bottom","prevToasts","prevState","nextState","positions","acc","ToastManager","options","String","Boolean","zIndex","right","left","methods","notify","closeAll","isActive","isVisible","object","portalId","existingPortal","portal","div","bindFunctions","description","variant","borderRadius","boxShadow","paddingEnd","textAlign","flex","isClosable","onClick","insetEnd","defaultStandaloneParam","theme","colorMode","toggleColorMode","setColorMode","defaultOptions","useToast","useChakra","renderWithProviders","toastImpl","opts","createStandaloneToast","useFormControl","labelIds","readOnly","required","callAllHandlers","useFormControlProps","ariaAttr","Input","input","_className"],"mappings":"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","file":"static/js/0.4b7532af.chunk.js","sourcesContent":["import { useBoolean, useId } from \"@chakra-ui/hooks\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  StylesProvider,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n} from \"@chakra-ui/system\"\nimport { cx, dataAttr, __DEV__, scheduleMicrotask } from \"@chakra-ui/utils\"\nimport {\n  createContext,\n  mergeRefs,\n  PropGetter,\n  PropGetterV2,\n} from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\n\nexport interface FormControlOptions {\n  /**\n   * If `true`, the form control will be required. This has 2 side effects:\n   * - The `FormLabel` will show a required indicator\n   * - The form element (e.g, Input) will have `aria-required` set to `true`\n   */\n  isRequired?: boolean\n  /**\n   * If `true`, the form control will be disabled. This has 2 side effects:\n   * - The `FormLabel` will have `data-disabled` attribute\n   * - The form element (e.g, Input) will be disabled\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the form control will be invalid. This has 2 side effects:\n   * - The `FormLabel` and `FormErrorIcon` will have `data-invalid` set to `true`\n   * - The form element (e.g, Input) will have `aria-invalid` set to `true`\n   */\n  isInvalid?: boolean\n  /**\n   * If `true`, the form control will be readonly\n   */\n  isReadOnly?: boolean\n}\n\ninterface FormControlContext extends FormControlOptions {\n  /**\n   * The label text used to inform users as to what information is\n   * requested for a text field.\n   */\n  label?: string\n  /**\n   * The custom `id` to use for the form control. This is passed directly to the form element (e.g, Input).\n   * - The form element (e.g Input) gets the `id`\n   * - The form label id: `form-label-${id}`\n   * - The form error text id: `form-error-text-${id}`\n   * - The form helper text id: `form-helper-text-${id}`\n   */\n  id?: string\n}\n\ntype FormControlProviderContext = Omit<\n  ReturnType<typeof useFormControlProvider>,\n  \"getRootProps\" | \"htmlProps\"\n>\n\nconst [\n  FormControlProvider,\n  useFormControlContext,\n] = createContext<FormControlProviderContext>({\n  strict: false,\n  name: \"FormControlContext\",\n})\n\nexport { useFormControlContext }\n\nfunction useFormControlProvider(props: FormControlContext) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props\n\n  // Generate all the required ids\n  const uuid = useId()\n  const id = idProp || `field-${uuid}`\n\n  const labelId = `${id}-label`\n  const feedbackId = `${id}-feedback`\n  const helpTextId = `${id}-helptext`\n\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n  const [hasFeedbackText, setHasFeedbackText] = React.useState(false)\n\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n  const [hasHelpText, setHasHelpText] = React.useState(false)\n\n  // Track whether the form element (e.g, `input`) has focus.\n  const [isFocused, setFocus] = useBoolean()\n\n  const getHelpTextProps = React.useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props,\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node) return\n        setHasHelpText(true)\n      }),\n    }),\n    [helpTextId],\n  )\n\n  const getLabelProps = React.useCallback<PropGetterV2<\"label\">>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props.id ?? labelId,\n      htmlFor: props.htmlFor ?? id,\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId],\n  )\n\n  const getErrorMessageProps = React.useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props,\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node) return\n        setHasFeedbackText(true)\n      }),\n      \"aria-live\": \"polite\",\n    }),\n    [feedbackId],\n  )\n\n  const getRootProps = React.useCallback<PropGetterV2<\"div\">>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\",\n    }),\n    [htmlProps],\n  )\n\n  const getRequiredIndicatorProps = React.useCallback<PropGetter>(\n    (props = {}, forwardedRef = null) => ({\n      ...props,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props.children || \"*\",\n    }),\n    [],\n  )\n\n  const onFocus = React.useCallback(() => {\n    scheduleMicrotask(setFocus.on)\n  }, [setFocus])\n\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus,\n    onBlur: setFocus.off,\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps,\n  }\n}\n\nexport interface FormControlProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"FormControl\">,\n    FormControlContext {}\n\n/**\n * FormControl provides context such as\n * `isInvalid`, `isDisabled`, and `isRequired` to form elements.\n *\n * This is commonly used in form elements such as `input`,\n * `select`, `textarea`, etc.\n */\nexport const FormControl = forwardRef<FormControlProps, \"div\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Form\", props)\n  const ownProps = omitThemingProps(props)\n  const { getRootProps, htmlProps: _, ...context } = useFormControlProvider(\n    ownProps,\n  )\n\n  const className = cx(\"chakra-form-control\", props.className)\n  const contextValue = React.useMemo(() => context, [context])\n\n  return (\n    <FormControlProvider value={contextValue}>\n      <StylesProvider value={styles}>\n        <chakra.div\n          {...getRootProps({}, ref)}\n          className={className}\n          __css={{\n            width: \"100%\",\n            position: \"relative\",\n          }}\n        />\n      </StylesProvider>\n    </FormControlProvider>\n  )\n})\n\nif (__DEV__) {\n  FormControl.displayName = \"FormControl\"\n}\n\nexport interface HelpTextProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * FormHelperText\n *\n * Assistive component that conveys additional guidance\n * about the field, such as how it will be used and what\n * types in values should be provided.\n */\nexport const FormHelperText = forwardRef<HelpTextProps, \"div\">((props, ref) => {\n  const field = useFormControlContext()\n  const styles = useStyles()\n  const className = cx(\"chakra-form__helper-text\", props.className)\n  return (\n    <chakra.div\n      {...field?.getHelpTextProps(props, ref)}\n      __css={styles.helperText}\n      className={className}\n    />\n  )\n})\n\nif (__DEV__) {\n  FormHelperText.displayName = \"FormHelperText\"\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import { useCallback, useState } from \"react\"\n\ntype InitialState = boolean | (() => boolean)\n\n/**\n * React hook to manage boolean (on - off) states\n *\n * @param initialState the initial boolean state value\n */\nexport function useBoolean(initialState: InitialState = false) {\n  const [value, setValue] = useState(initialState)\n\n  const on = useCallback(() => {\n    setValue(true)\n  }, [])\n\n  const off = useCallback(() => {\n    setValue(false)\n  }, [])\n\n  const toggle = useCallback(() => {\n    setValue((prev) => !prev)\n  }, [])\n\n  return [value, { on, off, toggle }] as const\n}\n","import * as React from \"react\"\nimport { Icon, IconProps } from \"@chakra-ui/icon\"\n\nexport const CheckIcon: React.FC<IconProps> = (props) => (\n  <Icon viewBox=\"0 0 24 24\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z\"\n    />\n  </Icon>\n)\n\nexport const InfoIcon: React.FC<IconProps> = (props) => (\n  <Icon viewBox=\"0 0 24 24\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M12,0A12,12,0,1,0,24,12,12.013,12.013,0,0,0,12,0Zm.25,5a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,12.25,5ZM14.5,18.5h-4a1,1,0,0,1,0-2h.75a.25.25,0,0,0,.25-.25v-4.5a.25.25,0,0,0-.25-.25H10.5a1,1,0,0,1,0-2h1a2,2,0,0,1,2,2v4.75a.25.25,0,0,0,.25.25h.75a1,1,0,1,1,0,2Z\"\n    />\n  </Icon>\n)\n\nexport const WarningIcon: React.FC<IconProps> = (props) => (\n  <Icon viewBox=\"0 0 24 24\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n    />\n  </Icon>\n)\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  StylesProvider,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/utils\"\nimport { createContext } from \"@chakra-ui/react-utils\"\nimport * as React from \"react\"\nimport { CheckIcon, InfoIcon, WarningIcon } from \"./icons\"\n\nconst STATUSES = {\n  info: { icon: InfoIcon, colorScheme: \"blue\" },\n  warning: { icon: WarningIcon, colorScheme: \"orange\" },\n  success: { icon: CheckIcon, colorScheme: \"green\" },\n  error: { icon: WarningIcon, colorScheme: \"red\" },\n}\n\nexport type AlertStatus = keyof typeof STATUSES\n\ninterface AlertContext {\n  status: AlertStatus\n}\n\nconst [AlertProvider, useAlertContext] = createContext<AlertContext>({\n  name: \"AlertContext\",\n  errorMessage:\n    \"useAlertContext: `context` is undefined. Seems you forgot to wrap alert components in `<Alert />`\",\n})\n\ninterface AlertOptions {\n  /**\n   * The status of the alert\n   */\n  status?: AlertStatus\n}\n\nexport interface AlertProps\n  extends HTMLChakraProps<\"div\">,\n    AlertOptions,\n    ThemingProps<\"Alert\"> {}\n\n/**\n * Alert is used to communicate the state or status of a\n * page, feature or action\n */\nexport const Alert = forwardRef<AlertProps, \"div\">((props, ref) => {\n  const { status = \"info\", ...rest } = omitThemingProps(props)\n  const colorScheme = props.colorScheme ?? STATUSES[status].colorScheme\n\n  const styles = useMultiStyleConfig(\"Alert\", { ...props, colorScheme })\n\n  const alertStyles: SystemStyleObject = {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    position: \"relative\",\n    overflow: \"hidden\",\n    ...styles.container,\n  }\n\n  return (\n    <AlertProvider value={{ status }}>\n      <StylesProvider value={styles}>\n        <chakra.div\n          role=\"alert\"\n          ref={ref}\n          {...rest}\n          className={cx(\"chakra-alert\", props.className)}\n          __css={alertStyles}\n        />\n      </StylesProvider>\n    </AlertProvider>\n  )\n})\n\nexport interface AlertTitleProps extends HTMLChakraProps<\"div\"> {}\n\nexport const AlertTitle = forwardRef<AlertTitleProps, \"div\">((props, ref) => {\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      ref={ref}\n      {...props}\n      className={cx(\"chakra-alert__title\", props.className)}\n      __css={styles.title}\n    />\n  )\n})\n\nexport interface AlertDescriptionProps extends HTMLChakraProps<\"div\"> {}\n\nexport const AlertDescription = forwardRef<AlertDescriptionProps, \"div\">(\n  (props, ref) => {\n    const styles = useStyles()\n    const descriptionStyles: SystemStyleObject = {\n      display: \"inline\",\n      ...styles.description,\n    }\n\n    return (\n      <chakra.div\n        ref={ref}\n        {...props}\n        className={cx(\"chakra-alert__desc\", props.className)}\n        __css={descriptionStyles}\n      />\n    )\n  },\n)\n\nexport interface AlertIconProps extends HTMLChakraProps<\"span\"> {}\n\nexport const AlertIcon: React.FC<AlertIconProps> = (props) => {\n  const { status } = useAlertContext()\n  const { icon: BaseIcon } = STATUSES[status]\n  const styles = useStyles()\n\n  return (\n    <chakra.span\n      display=\"inherit\"\n      {...props}\n      className={cx(\"chakra-alert__icon\", props.className)}\n      __css={styles.icon}\n    >\n      <BaseIcon w=\"100%\" h=\"100%\" />\n    </chakra.span>\n  )\n}\n","import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemStyleObject,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nconst CloseIcon: React.FC<IconProps> = (props) => (\n  <Icon focusable=\"false\" aria-hidden {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z\"\n    />\n  </Icon>\n)\n\nexport interface CloseButtonProps\n  extends HTMLChakraProps<\"button\">,\n    ThemingProps<\"CloseButton\"> {\n  /**\n   * If `true`, the close button will be disabled.\n   */\n  isDisabled?: boolean\n}\n\n/**\n * A button with a close icon.\n *\n * It is used to handle the close functionality in feedback and overlay components\n * like Alerts, Toasts, Drawers and Modals.\n */\nexport const CloseButton = forwardRef<CloseButtonProps, \"button\">(\n  (props, ref) => {\n    const styles = useStyleConfig(\"CloseButton\", props)\n    const { children, isDisabled, __css, ...rest } = omitThemingProps(props)\n\n    const baseStyle: SystemStyleObject = {\n      outline: 0,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flexShrink: 0,\n    }\n\n    return (\n      <chakra.button\n        type=\"button\"\n        aria-label=\"Close\"\n        ref={ref}\n        disabled={isDisabled}\n        __css={{\n          ...baseStyle,\n          ...styles,\n          ...__css,\n        }}\n        {...rest}\n      >\n        {children || <CloseIcon width=\"1em\" height=\"1em\" />}\n      </chakra.button>\n    )\n  },\n)\n\nif (__DEV__) {\n  CloseButton.displayName = \"CloseButton\"\n}\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import * as React from 'react';\nimport { useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.js';\nimport { useConstant } from '../../utils/use-constant.js';\n\nvar presenceId = 0;\nfunction getPresenceId() {\n    var id = presenceId;\n    presenceId++;\n    return id;\n}\nvar PresenceChild = function (_a) {\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\n    var presenceChildren = useConstant(newChildrenMap);\n    var id = useConstant(getPresenceId);\n    var context = useMemo(function () { return ({\n        id: id,\n        initial: initial,\n        isPresent: isPresent,\n        custom: custom,\n        onExitComplete: function (childId) {\n            presenceChildren.set(childId, true);\n            var allComplete = true;\n            presenceChildren.forEach(function (isComplete) {\n                if (!isComplete)\n                    allComplete = false;\n            });\n            allComplete && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n        },\n        register: function (childId) {\n            presenceChildren.set(childId, false);\n            return function () { return presenceChildren.delete(childId); };\n        },\n    }); }, \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(function () {\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(function () {\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n    }, [isPresent]);\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { __spreadArray, __read } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.js';\nimport { PresenceChild } from './PresenceChild.js';\nimport { SharedLayoutContext, isSharedLayout } from '../../context/SharedLayoutContext.js';\n\nfunction getChildKey(child) {\n    return child.key || \"\";\n}\nfunction updateChildLookup(children, allChildren) {\n    var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        if (process.env.NODE_ENV !== \"production\" && seenChildren) {\n            if (seenChildren.has(key)) {\n                console.warn(\"Children of AnimatePresence require unique keys. \\\"\" + key + \"\\\" is a duplicate.\");\n            }\n            seenChildren.add(key);\n        }\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, function (child) {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * @library\n *\n * Any `Frame` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { Frame, AnimatePresence } from 'framer'\n *\n * // As items are added and removed from `items`\n * export function Items({ items }) {\n *   return (\n *     <AnimatePresence>\n *       {items.map(item => (\n *         <Frame\n *           key={item.id}\n *           initial={{ opacity: 0 }}\n *           animate={{ opacity: 1 }}\n *           exit={{ opacity: 0 }}\n *         />\n *       ))}\n *     </AnimatePresence>\n *   )\n * }\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * @motion\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var forceRender = useForceUpdate();\n    var layoutContext = useContext(SharedLayoutContext);\n    if (isSharedLayout(layoutContext)) {\n        forceRender = layoutContext.forceUpdate;\n    }\n    var isInitialRender = useRef(true);\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = useRef(filteredChildren);\n    // A lookup table to quickly reference components by key\n    var allChildren = useRef(new Map())\n        .current;\n    // A living record of all currently exiting components.\n    var exiting = useRef(new Set()).current;\n    updateChildLookup(filteredChildren, allChildren);\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    if (isInitialRender.current) {\n        isInitialRender.current = false;\n        return (React.createElement(React.Fragment, null, filteredChildren.map(function (child) { return (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    var childrenToRender = __spreadArray([], __read(filteredChildren));\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n        else {\n            // In case this key has re-entered, remove from the exiting list\n            exiting.delete(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    presentChildren.current = childrenToRender;\n    if (process.env.NODE_ENV !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return cloneElement(child); })));\n};\n\nexport { AnimatePresence };\n","import { __read } from 'tslib';\nimport { useCallback, useRef, useState } from 'react';\nimport { useUnmountEffect } from './use-unmount-effect.js';\n\nfunction useForceUpdate() {\n    var unloadingRef = useRef(false);\n    var _a = __read(useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\n    useUnmountEffect(function () { return (unloadingRef.current = true); });\n    return useCallback(function () {\n        !unloadingRef.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n}\n\nexport { useForceUpdate };\n","import { forwardRef, createElement } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\n/**\n * VisuallyHidden\n *\n * Provides text for screen readers that is visually hidden.\n * It is the logical opposite of the `aria-hidden` attribute.\n */\n\nvar VisuallyHidden = /*#__PURE__*/forwardRef(function VisuallyHidden(_ref, ref) {\n  var _ref$as = _ref.as,\n      Comp = _ref$as === void 0 ? \"span\" : _ref$as,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"style\"]);\n\n  return /*#__PURE__*/createElement(Comp, _extends({\n    ref: ref,\n    style: _extends({\n      border: 0,\n      clip: \"rect(0 0 0 0)\",\n      height: \"1px\",\n      margin: \"-1px\",\n      overflow: \"hidden\",\n      padding: 0,\n      position: \"absolute\",\n      width: \"1px\",\n      // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n      whiteSpace: \"nowrap\",\n      wordWrap: \"normal\"\n    }, style)\n  }, props));\n});\n/**\n * @see Docs https://reach.tech/visually-hidden#visuallyhidden-props\n */\n\nif (process.env.NODE_ENV !== \"production\") {\n  VisuallyHidden.displayName = \"VisuallyHidden\";\n  VisuallyHidden.propTypes = {\n    as: PropTypes.any,\n    children: PropTypes.node\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n\nexport default VisuallyHidden;\nexport { VisuallyHidden };\n","import * as React from 'react';\nimport { useLayoutEffect, useEffect, isValidElement, cloneElement, createContext, forwardRef, memo, useRef, useState, useCallback, useMemo } from 'react';\nimport fbWarning from 'warning';\n\n/* eslint-disable no-restricted-globals, eqeqeq  */\n\n/**\n * React currently throws a warning when using useLayoutEffect on the server.\n * To get around it, we can conditionally useEffect on the server (no-op) and\n * useLayoutEffect in the browser. We occasionally need useLayoutEffect to\n * ensure we don't get a render flash for certain operations, but we may also\n * need affected components to render on the server. One example is when setting\n * a component's descendants to retrieve their index values.\n *\n * Important to note that using this hook as an escape hatch will break the\n * eslint dependency warnings unless you rename the import to `useLayoutEffect`.\n * Use sparingly only when the effect won't effect the rendered HTML to avoid\n * any server/client mismatch.\n *\n * If a useLayoutEffect is needed and the result would create a mismatch, it's\n * likely that the component in question shouldn't be rendered on the server at\n * all, so a better approach would be to lazily render those in a parent\n * component after client-side hydration.\n *\n * TODO: We are calling useLayoutEffect in a couple of places that will likely\n * cause some issues for SSR users, whether the warning shows or not. Audit and\n * fix these.\n *\n * https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * https://github.com/reduxjs/react-redux/blob/master/src/utils/useIsomorphicLayoutEffect.js\n *\n * @param effect\n * @param deps\n */\nvar useIsomorphicLayoutEffect = /*#__PURE__*/canUseDOM() ? useLayoutEffect : useEffect;\nvar checkedPkgs = {};\n/**\n * Copy of Facebook's warning package.\n *\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical paths.\n * Removing the logging code for production environments will keep the same\n * logic and follow the same code paths.\n *\n * @see https://github.com/BerkeleyTrue/warning/blob/master/warning.js\n */\n\nvar warning = fbWarning;\n/**\n * When in dev mode, checks that styles for a given @reach package are loaded.\n *\n * @param packageName Name of the package to check.\n * @example checkStyles(\"dialog\") will check for styles for @reach/dialog\n */\n\nvar checkStyles = noop;\n\nif (process.env.NODE_ENV !== \"production\") {\n  // In CJS files, process.env.NODE_ENV is stripped from our build, but we need\n  // it to prevent style checks from clogging up user logs while testing.\n  // This is a workaround until we can tweak the build a bit to accommodate.\n  var _ref = typeof process !== \"undefined\" ? process : {\n    env: {\n      NODE_ENV: \"development\"\n    }\n  },\n      env = _ref.env;\n\n  checkStyles = function checkStyles(packageName) {\n    // only check once per package\n    if (checkedPkgs[packageName]) return;\n    checkedPkgs[packageName] = true;\n\n    if (env.NODE_ENV !== \"test\" && parseInt(window.getComputedStyle(document.body).getPropertyValue(\"--reach-\" + packageName), 10) !== 1) {\n      console.warn(\"@reach/\" + packageName + \" styles not found. If you are using a bundler like webpack or parcel include this in the entry file of your app before any of your own styles:\\n\\n    import \\\"@reach/\" + packageName + \"/styles.css\\\";\\n\\n  Otherwise you'll need to include them some other way:\\n\\n    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"node_modules/@reach/\" + packageName + \"/styles.css\\\" />\\n\\n  For more information visit https://ui.reach.tech/styling.\\n  \");\n    }\n  };\n}\n/**\n * Ponyfill for the global object in some environments.\n *\n * @link https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n */\n\nvar ponyfillGlobal = typeof window != \"undefined\" && window.Math == Math ? window : typeof self != \"undefined\" && self.Math == Math ? self :\n/*#__PURE__*/\n// eslint-disable-next-line no-new-func\nFunction(\"return this\")();\n/**\n * Passes or assigns an arbitrary value to a ref function or object.\n *\n * @param ref\n * @param value\n */\n\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n\n  if (isFunction(ref)) {\n    ref(value);\n  } else {\n    try {\n      ref.current = value;\n    } catch (error) {\n      throw new Error(\"Cannot assign value \\\"\" + value + \"\\\" to ref \\\"\" + ref + \"\\\"\");\n    }\n  }\n}\n/**\n * Checks true|\"true\" vs false|\"false\"\n *\n * @param value\n */\n\nfunction boolOrBoolString(value) {\n  return value === \"true\" ? true : isBoolean(value) ? value : false;\n}\nfunction canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n}\n/**\n * Type-safe clone element\n *\n * @param element\n * @param props\n * @param children\n */\n\nfunction cloneValidElement(element, props) {\n  for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n\n  return /*#__PURE__*/isValidElement(element) ? cloneElement.apply(React, [element, props].concat(children)) : element;\n}\nfunction createNamedContext(name, defaultValue) {\n  var Ctx = /*#__PURE__*/createContext(defaultValue);\n  Ctx.displayName = name;\n  return Ctx;\n}\n/**\n * This is a hack for sure. The thing is, getting a component to intelligently\n * infer props based on a component or JSX string passed into an `as` prop is\n * kind of a huge pain. Getting it to work and satisfy the constraints of\n * `forwardRef` seems dang near impossible. To avoid needing to do this awkward\n * type song-and-dance every time we want to forward a ref into a component\n * that accepts an `as` prop, we abstract all of that mess to this function for\n * the time time being.\n */\n\nfunction forwardRefWithAs(render) {\n  return /*#__PURE__*/forwardRef(render);\n}\nfunction memoWithAs(Component, propsAreEqual) {\n  return /*#__PURE__*/memo(Component, propsAreEqual);\n}\n/**\n * Get the size of the working document minus the scrollbar offset.\n *\n * @param element\n */\n\nfunction getDocumentDimensions(element) {\n  var _ownerDocument$docume, _ownerDocument$docume2;\n\n  var ownerDocument = getOwnerDocument(element);\n  var ownerWindow = ownerDocument.defaultView || window;\n\n  if (!ownerDocument) {\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n\n  return {\n    width: (_ownerDocument$docume = ownerDocument.documentElement.clientWidth) != null ? _ownerDocument$docume : ownerWindow.innerWidth,\n    height: (_ownerDocument$docume2 = ownerDocument.documentElement.clientHeight) != null ? _ownerDocument$docume2 : ownerWindow.innerHeight\n  };\n}\n/**\n * Get the scoll position of the global window object relative to a given node.\n *\n * @param element\n */\n\nfunction getScrollPosition(element) {\n  var ownerDocument = getOwnerDocument(element);\n  var ownerWindow = ownerDocument.defaultView || window;\n\n  if (!ownerDocument) {\n    return {\n      scrollX: 0,\n      scrollY: 0\n    };\n  }\n\n  return {\n    scrollX: ownerWindow.scrollX,\n    scrollY: ownerWindow.scrollY\n  };\n}\n/**\n * Get a computed style value by property.\n *\n * @param element\n * @param styleProp\n */\n\nfunction getElementComputedStyle(element, styleProp) {\n  var ownerDocument = getOwnerDocument(element);\n  var ownerWindow = (ownerDocument == null ? void 0 : ownerDocument.defaultView) || window;\n\n  if (ownerWindow) {\n    return ownerWindow.getComputedStyle(element, null).getPropertyValue(styleProp);\n  }\n\n  return null;\n}\n/**\n * Get an element's owner document. Useful when components are used in iframes\n * or other environments like dev tools.\n *\n * @param element\n */\n\nfunction getOwnerDocument(element) {\n  return canUseDOM() ? element ? element.ownerDocument : document : null;\n}\n/**\n * TODO: Remove in 1.0\n */\n\nfunction getOwnerWindow(element) {\n  var ownerDocument = getOwnerDocument(element);\n  return ownerDocument ? ownerDocument.defaultView || window : null;\n}\n/**\n * Get the scrollbar offset distance.\n *\n * TODO: Remove in 1.0 (we used this in public examples)\n */\n\nfunction getScrollbarOffset() {\n  try {\n    if (window.innerWidth > document.documentElement.clientWidth) {\n      return window.innerWidth - document.documentElement.clientWidth;\n    }\n  } catch (err) {}\n\n  return 0;\n}\n/**\n * Checks whether or not a value is a boolean.\n *\n * @param value\n */\n\nfunction isBoolean(value) {\n  return typeof value === \"boolean\";\n}\n/**\n * Checks whether or not a value is a function.\n *\n * @param value\n */\n\nfunction isFunction(value) {\n  return !!(value && {}.toString.call(value) == \"[object Function]\");\n}\n/**\n * Checks whether or not a value is a number.\n *\n * @param value\n */\n\nfunction isNumber(value) {\n  return typeof value === \"number\" && !isNaN(value);\n}\n/**\n * Detects right clicks\n *\n * @param nativeEvent\n */\n\nfunction isRightClick(nativeEvent) {\n  return \"which\" in nativeEvent ? nativeEvent.which === 3 : \"button\" in nativeEvent ? nativeEvent.button === 2 : false;\n}\n/**\n * Checks whether or not a value is a string.\n *\n * @param value\n */\n\nfunction isString(value) {\n  return typeof value === \"string\";\n}\n/**\n * Joins strings to format IDs for compound components.\n *\n * @param args\n */\n\nfunction makeId() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return args.filter(function (val) {\n    return val != null;\n  }).join(\"--\");\n}\n/**\n * No-op function.\n */\n\nfunction noop() {}\n/**\n * Convert our state strings for HTML data attributes.\n * No need for a fancy kebab-caser here, we know what our state strings are!\n *\n * @param state\n */\n\nfunction stateToAttributeString(state) {\n  return String(state).replace(/([\\s_]+)/g, \"-\").toLowerCase();\n}\n/**\n * Check if a component is controlled or uncontrolled and return the correct\n * state value and setter accordingly. If the component state is controlled by\n * the app, the setter is a noop.\n *\n * @param controlledValue\n * @param defaultValue\n */\n\nfunction useControlledState(controlledValue, defaultValue) {\n  var controlledRef = useRef(controlledValue != null);\n\n  var _React$useState = useState(defaultValue),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var set = useCallback(function (n) {\n    if (!controlledRef.current) {\n      setValue(n);\n    }\n  }, []);\n  return [controlledRef.current ? controlledValue : valueState, set];\n}\n/**\n * Logs a warning in dev mode when a component switches from controlled to\n * uncontrolled, or vice versa\n *\n * A single prop should typically be used to determine whether or not a\n * component is controlled or not.\n *\n * @param controlledValue\n * @param controlledPropName\n * @param componentName\n */\n\nvar useControlledSwitchWarning = noop;\n\nif (process.env.NODE_ENV !== \"production\") {\n  useControlledSwitchWarning = function useControlledSwitchWarning(controlledValue, controlledPropName, componentName) {\n    var controlledRef = useRef(controlledValue != null);\n    var nameCache = useRef({\n      componentName: componentName,\n      controlledPropName: controlledPropName\n    });\n    useEffect(function () {\n      nameCache.current = {\n        componentName: componentName,\n        controlledPropName: controlledPropName\n      };\n    }, [componentName, controlledPropName]);\n    useEffect(function () {\n      var wasControlled = controlledRef.current;\n      var _nameCache$current = nameCache.current,\n          componentName = _nameCache$current.componentName,\n          controlledPropName = _nameCache$current.controlledPropName;\n      var isControlled = controlledValue != null;\n\n      if (wasControlled !== isControlled) {\n        console.error(\"A component is changing an \" + (wasControlled ? \"\" : \"un\") + \"controlled `\" + controlledPropName + \"` state of \" + componentName + \" to be \" + (wasControlled ? \"un\" : \"\") + \"controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled \" + componentName + \" element for the lifetime of the component.\\nMore info: https://fb.me/react-controlled-components\");\n      }\n    }, [controlledValue]);\n  };\n}\nvar useCheckStyles = noop;\n\nif (process.env.NODE_ENV !== \"production\") {\n  useCheckStyles = function useCheckStyles(pkg) {\n    var name = useRef(pkg);\n    useEffect(function () {\n      return void (name.current = pkg);\n    }, [pkg]);\n    useEffect(function () {\n      return checkStyles(name.current);\n    }, []);\n  };\n}\n/**\n * React hook for creating a value exactly once.\n * @see https://github.com/Andarist/use-constant\n */\n\nfunction useConstant(fn) {\n  var ref = useRef();\n\n  if (!ref.current) {\n    ref.current = {\n      v: fn()\n    };\n  }\n\n  return ref.current.v;\n}\n/**\n * @param callback\n */\n\nfunction useEventCallback(callback) {\n  var ref = useRef(callback);\n  useIsomorphicLayoutEffect(function () {\n    ref.current = callback;\n  });\n  return useCallback(function (event) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    return ref.current.apply(ref, [event].concat(args));\n  }, []);\n}\nfunction useLazyRef(fn) {\n  var ref = useRef({\n    __internalSet: true\n  });\n\n  if (ref.current && ref.current.__internalSet === true) {\n    ref.current = fn();\n  }\n\n  return ref;\n}\n/**\n * TODO: Remove in 1.0\n * @alias useStableCallback\n * @param callback\n */\n\nvar useCallbackProp = useStableCallback;\n/**\n * Adds a DOM event listener\n *\n * @param eventName\n * @param listener\n * @param element\n */\n\nfunction useEventListener(eventName, listener, element) {\n  if (element === void 0) {\n    element = window;\n  }\n\n  var savedHandler = useRef(listener);\n  useEffect(function () {\n    savedHandler.current = listener;\n  }, [listener]);\n  useEffect(function () {\n    var isSupported = element && element.addEventListener;\n\n    if (!isSupported) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn(\"Event listener not supported on the element provided\");\n      }\n\n      return;\n    }\n\n    function eventListener(event) {\n      savedHandler.current(event);\n    }\n\n    element.addEventListener(eventName, eventListener);\n    return function () {\n      element.removeEventListener(eventName, eventListener);\n    };\n  }, [eventName, element]);\n}\n/**\n * Detect when focus changes in our document.\n *\n * @param handleChange\n * @param when\n * @param ownerDocument\n */\n\nfunction useFocusChange(handleChange, when, ownerDocument) {\n  if (handleChange === void 0) {\n    handleChange = console.log;\n  }\n\n  if (when === void 0) {\n    when = \"focus\";\n  }\n\n  if (ownerDocument === void 0) {\n    ownerDocument = document;\n  }\n\n  var lastActiveElement = useRef(ownerDocument.activeElement);\n  useEffect(function () {\n    lastActiveElement.current = ownerDocument.activeElement;\n\n    function onChange(event) {\n      if (lastActiveElement.current !== ownerDocument.activeElement) {\n        handleChange(ownerDocument.activeElement, lastActiveElement.current, event);\n        lastActiveElement.current = ownerDocument.activeElement;\n      }\n    }\n\n    ownerDocument.addEventListener(when, onChange, true);\n    return function () {\n      ownerDocument.removeEventListener(when, onChange);\n    };\n  }, [when, handleChange, ownerDocument]);\n}\n/**\n * Forces a re-render, similar to `forceUpdate` in class components.\n */\n\nfunction useForceUpdate() {\n  var _React$useState2 = useState(Object.create(null)),\n      dispatch = _React$useState2[1];\n\n  return useCallback(function () {\n    dispatch(Object.create(null));\n  }, []);\n}\n/**\n * Passes or assigns a value to multiple refs (typically a DOM node). Useful for\n * dealing with components that need an explicit ref for DOM calculations but\n * also forwards refs assigned by an app.\n *\n * @param refs Refs to fork\n */\n\nfunction useForkedRef() {\n  for (var _len4 = arguments.length, refs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    refs[_key4] = arguments[_key4];\n  }\n\n  return useMemo(function () {\n    if (refs.every(function (ref) {\n      return ref == null;\n    })) {\n      return null;\n    }\n\n    return function (node) {\n      refs.forEach(function (ref) {\n        assignRef(ref, node);\n      });\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [].concat(refs));\n}\n/**\n * Returns the previous value of a reference after a component update.\n *\n * @param value\n */\n\nfunction usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n/**\n * Converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop and exposed as a stable function to avoid executing effects when\n * passed as a dependency.\n */\n\nfunction useStableCallback(callback) {\n  var callbackRef = useRef(callback);\n  useEffect(function () {\n    callbackRef.current = callback;\n  }); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  return useCallback(function () {\n    callbackRef.current && callbackRef.current.apply(callbackRef, arguments);\n  }, []);\n}\n/**\n * Call an effect after a component update, skipping the initial mount.\n *\n * @param effect Effect to call\n * @param deps Effect dependency list\n */\n\nfunction useUpdateEffect(effect, deps) {\n  var mounted = useRef(false);\n  useEffect(function () {\n    if (mounted.current) {\n      effect();\n    } else {\n      mounted.current = true;\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, deps);\n}\n/**\n * Just a lil state logger\n *\n * @param state\n * @param DEBUG\n */\n\nvar useStateLogger = noop;\n\nif (process.env.NODE_ENV !== \"production\") {\n  useStateLogger = function useStateLogger(state, DEBUG) {\n    if (DEBUG === void 0) {\n      DEBUG = false;\n    }\n\n    var debugRef = useRef(DEBUG);\n    useEffect(function () {\n      debugRef.current = DEBUG;\n    }, [DEBUG]);\n    useEffect(function () {\n      if (debugRef.current) {\n        console.group(\"State Updated\");\n        console.log(\"%c\" + state, \"font-weight: normal; font-size: 120%; font-style: italic;\");\n        console.groupEnd();\n      }\n    }, [state]);\n  };\n}\n/**\n * Wraps a lib-defined event handler and a user-defined event handler, returning\n * a single handler that allows a user to prevent lib-defined handlers from\n * firing.\n *\n * @param theirHandler User-supplied event handler\n * @param ourHandler Library-supplied event handler\n */\n\nfunction wrapEvent(theirHandler, ourHandler) {\n  return function (event) {\n    theirHandler && theirHandler(event);\n\n    if (!event.defaultPrevented) {\n      return ourHandler(event);\n    }\n  };\n} // Export types\n\nexport { assignRef, boolOrBoolString, canUseDOM, checkStyles, cloneValidElement, createNamedContext, forwardRefWithAs, getDocumentDimensions, getElementComputedStyle, getOwnerDocument, getOwnerWindow, getScrollPosition, getScrollbarOffset, isBoolean, isFunction, isNumber, isRightClick, isString, makeId, memoWithAs, noop, ponyfillGlobal, stateToAttributeString, useCallbackProp, useCheckStyles, useConstant, useControlledState, useControlledSwitchWarning, useEventCallback, useEventListener, useFocusChange, useForceUpdate, useForkedRef, useIsomorphicLayoutEffect, useLazyRef, usePrevious, useStableCallback, useStateLogger, useUpdateEffect, warning, wrapEvent };\n","import { useRef, useMemo, createElement, useEffect, cloneElement } from 'react';\nimport { render } from 'react-dom';\nimport { VisuallyHidden } from '@reach/visually-hidden';\nimport { forwardRefWithAs, useForkedRef, usePrevious, getOwnerDocument } from '@reach/utils';\nimport PropTypes from 'prop-types';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\n/*\n * Singleton state is fine because you don't server render\n * an alert (SRs don't read them on first load anyway)\n */\n\nvar keys = {\n  polite: -1,\n  assertive: -1\n};\nvar elements = {\n  polite: {},\n  assertive: {}\n};\nvar liveRegions = {\n  polite: null,\n  assertive: null\n};\nvar renderTimer; ////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Alert\n *\n * Screen-reader-friendly alert messages. In many apps developers add \"alert\"\n * messages when network events or other things happen. Users with assistive\n * technologies may not know about the message unless you develop for it.\n *\n * @see Docs https://reach.tech/alert\n */\n\nvar Alert = /*#__PURE__*/forwardRefWithAs(function Alert(_ref, forwardedRef) {\n  var _ref$as = _ref.as,\n      Comp = _ref$as === void 0 ? \"div\" : _ref$as,\n      children = _ref.children,\n      _ref$type = _ref.type,\n      regionType = _ref$type === void 0 ? \"polite\" : _ref$type,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"children\", \"type\"]);\n\n  var ownRef = useRef(null);\n  var ref = useForkedRef(forwardedRef, ownRef);\n  var child = useMemo(function () {\n    return /*#__PURE__*/createElement(Comp, _extends({}, props, {\n      ref: ref,\n      \"data-reach-alert\": true\n    }), children);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [children, props]);\n  useMirrorEffects(regionType, child, ownRef);\n  return child;\n});\n/**\n * @see Docs https://reach.tech/alert#alert-props\n */\n\nif (process.env.NODE_ENV !== \"production\") {\n  Alert.displayName = \"Alert\";\n  Alert.propTypes = {\n    children: PropTypes.node,\n    type: /*#__PURE__*/PropTypes.oneOf([\"assertive\", \"polite\"])\n  };\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction createMirror(type, doc) {\n  var key = ++keys[type];\n\n  var mount = function mount(element) {\n    if (liveRegions[type]) {\n      elements[type][key] = element;\n      renderAlerts();\n    } else {\n      var node = doc.createElement(\"div\");\n      node.setAttribute(\"data-reach-live-\" + type, \"true\");\n      liveRegions[type] = node;\n      doc.body.appendChild(liveRegions[type]);\n      mount(element);\n    }\n  };\n\n  var update = function update(element) {\n    elements[type][key] = element;\n    renderAlerts();\n  };\n\n  var unmount = function unmount() {\n    delete elements[type][key];\n    renderAlerts();\n  };\n\n  return {\n    mount: mount,\n    update: update,\n    unmount: unmount\n  };\n}\n\nfunction renderAlerts() {\n  if (renderTimer != null) {\n    window.clearTimeout(renderTimer);\n  }\n\n  renderTimer = window.setTimeout(function () {\n    Object.keys(elements).forEach(function (elementType) {\n      var regionType = elementType;\n      var container = liveRegions[regionType];\n\n      if (container) {\n        render( /*#__PURE__*/createElement(VisuallyHidden, {\n          as: \"div\"\n        }, /*#__PURE__*/createElement(\"div\", {\n          // The status role is a type of live region and a container whose\n          // content is advisory information for the user that is not\n          // important enough to justify an alert, and is often presented as\n          // a status bar. When the role is added to an element, the browser\n          // will send out an accessible status event to assistive\n          // technology products which can then notify the user about it.\n          // https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques/Using_the_status_role\n          role: regionType === \"assertive\" ? \"alert\" : \"status\",\n          \"aria-live\": regionType\n        }, Object.keys(elements[regionType]).map(function (key) {\n          return /*#__PURE__*/cloneElement(elements[regionType][key], {\n            key: key,\n            ref: null\n          });\n        }))), liveRegions[regionType]);\n      }\n    });\n  }, 500);\n}\n\nfunction useMirrorEffects(regionType, element, ref) {\n  var prevType = usePrevious(regionType);\n  var mirror = useRef(null);\n  var mounted = useRef(false);\n  useEffect(function () {\n    var ownerDocument = getOwnerDocument(ref.current);\n\n    if (!mounted.current) {\n      mounted.current = true;\n      mirror.current = createMirror(regionType, ownerDocument);\n      mirror.current.mount(element);\n    } else if (prevType !== regionType) {\n      mirror.current && mirror.current.unmount();\n      mirror.current = createMirror(regionType, ownerDocument);\n      mirror.current.mount(element);\n    } else {\n      mirror.current && mirror.current.update(element);\n    }\n  }, [element, regionType, prevType, ref]);\n  useEffect(function () {\n    return function () {\n      mirror.current && mirror.current.unmount();\n    };\n  }, []);\n} ////////////////////////////////////////////////////////////////////////////////\n\nexport default Alert;\nexport { Alert };\n","import { ToastPosition, ToastOptions, ToastState, ToastId } from \"./toast.types\"\n\n/**\n * Given an array of toasts for a specific position.\n * It returns the toast that matches the `id` passed\n */\nexport const findById = (arr: ToastOptions[], id: ToastId) =>\n  arr.find((toast) => toast.id === id)\n\n/**\n * Given the toast manager state, finds the toast that matches\n * the id and return its position and index\n */\nexport function findToast(toasts: ToastState, id: ToastId) {\n  const position = getToastPosition(toasts, id)\n\n  const index = position\n    ? toasts[position].findIndex((toast) => toast.id === id)\n    : -1\n\n  return {\n    position,\n    index,\n  }\n}\n\n/**\n * Given the toast manager state, finds the position of the toast that\n * matches the `id`\n */\nexport const getToastPosition = (toasts: ToastState, id: ToastId) =>\n  Object.values(toasts)\n    .flat()\n    .find((toast) => toast.id === id)?.position\n\n/**\n * Given the toast manager state, checks if a specific toast is\n * still in the state, which means it is still visible on screen.\n */\nexport const isVisible = (toasts: ToastState, id: ToastId) =>\n  !!getToastPosition(toasts, id)\n\n/**\n * Get's the styles to be applied to a toast's container\n * based on its position in the manager\n */\nexport function getToastStyle(position: ToastPosition): React.CSSProperties {\n  const isRighty = position.includes(\"right\")\n  const isLefty = position.includes(\"left\")\n\n  let alignItems = \"center\"\n  if (isRighty) alignItems = \"flex-end\"\n  if (isLefty) alignItems = \"flex-start\"\n\n  return {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems,\n  }\n}\n","import { useTimeout, useUpdateEffect } from \"@chakra-ui/hooks\"\nimport { isFunction, __DEV__ } from \"@chakra-ui/utils\"\nimport ReachAlert from \"@reach/alert\"\nimport { motion, useIsPresent, Variants } from \"framer-motion\"\nimport * as React from \"react\"\nimport { ToastOptions } from \"./toast.types\"\nimport { getToastStyle } from \"./toast.utils\"\n\n/**\n * @todo After Gerrit refactors this implementation,\n * allow users to change the toast transition direction from\n * a `ToastProvider` component.\n *\n * Here's an API example:\n *\n * ```jsx\n * <ToastProvider\n *   motion={customVariants}\n *   component={CustomToastComponent}\n *   autoCloseTimeout={3000}\n *   toastSpacing={32} // this will control the `margin` value applied\n * >\n * </ToastProvider>\n * ```\n */\nconst toastMotionVariants: Variants = {\n  initial: (props) => {\n    const { position } = props\n\n    const dir = [\"top\", \"bottom\"].includes(position) ? \"y\" : \"x\"\n\n    let factor = [\"top-right\", \"bottom-right\"].includes(position) ? 1 : -1\n    if (position === \"bottom\") factor = 1\n\n    return {\n      opacity: 0,\n      [dir]: factor * 24,\n    }\n  },\n  animate: {\n    opacity: 1,\n    y: 0,\n    x: 0,\n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.85,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n}\n\nexport interface ToastProps extends ToastOptions {}\n\nexport const Toast: React.FC<ToastProps> = (props) => {\n  const {\n    id,\n    message,\n    onCloseComplete,\n    onRequestRemove,\n    requestClose = false,\n    position = \"bottom\",\n    duration = 5000,\n  } = props\n\n  const [delay, setDelay] = React.useState(duration)\n\n  const isPresent = useIsPresent()\n\n  useUpdateEffect(() => {\n    if (!isPresent) {\n      onCloseComplete?.()\n    }\n  }, [isPresent])\n\n  useUpdateEffect(() => {\n    setDelay(duration)\n  }, [duration])\n\n  const onMouseEnter = () => setDelay(null)\n  const onMouseLeave = () => setDelay(duration)\n\n  const close = () => {\n    if (isPresent) onRequestRemove()\n  }\n\n  React.useEffect(() => {\n    if (isPresent && requestClose) {\n      onRequestRemove()\n    }\n  }, [isPresent, requestClose, onRequestRemove])\n\n  useTimeout(close, delay)\n\n  const style = React.useMemo(() => getToastStyle(position), [position])\n\n  return (\n    <motion.li\n      layout\n      className=\"chakra-toast\"\n      variants={toastMotionVariants}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      onHoverStart={onMouseEnter}\n      onHoverEnd={onMouseLeave}\n      custom={{ position }}\n      style={style}\n    >\n      <ReachAlert\n        className=\"chakra-toast__inner\"\n        style={{\n          pointerEvents: \"auto\",\n          maxWidth: 560,\n          minWidth: 300,\n          margin: \"0.5rem\",\n        }}\n      >\n        {isFunction(message) ? message({ id, onClose: close }) : message}\n      </ReachAlert>\n    </motion.li>\n  )\n}\n\nif (__DEV__) {\n  Toast.displayName = \"Toast\"\n}\n","import * as React from \"react\"\nimport { useCallbackRef } from \"./use-callback-ref\"\n\n/**\n * React hook that provides a declarative `setTimeout`\n *\n * @param callback the callback to run after specified delay\n * @param delay the delay (in ms)\n */\nexport function useTimeout(\n  callback: (...args: any[]) => void,\n  delay: number | null,\n) {\n  const fn = useCallbackRef(callback)\n\n  React.useEffect(() => {\n    if (delay == null) return undefined\n\n    let timeoutId: number | null = null\n\n    timeoutId = window.setTimeout(() => {\n      fn()\n    }, delay)\n\n    return () => {\n      if (timeoutId) {\n        window.clearTimeout(timeoutId)\n      }\n    }\n  }, [delay, fn])\n}\n","import { objectKeys } from \"@chakra-ui/utils\"\nimport { AnimatePresence } from \"framer-motion\"\nimport * as React from \"react\"\nimport { Toast } from \"./toast\"\nimport type {\n  CloseAllToastsOptions,\n  ToastId,\n  ToastMessage,\n  ToastOptions,\n  ToastPosition,\n} from \"./toast.types\"\nimport { findToast, getToastPosition } from \"./toast.utils\"\n\nexport interface ToastMethods {\n  notify: (message: ToastMessage, options: CreateToastOptions) => ToastId\n  closeAll: (options?: CloseAllToastsOptions) => void\n  close: (id: ToastId) => void\n  update: (id: ToastId, options: CreateToastOptions) => void\n  isActive: (id: ToastId) => boolean\n}\n\ninterface Props {\n  notify: (methods: ToastMethods) => void\n}\n\ntype State = { [K in ToastPosition]: ToastOptions[] }\n\ntype CreateToastOptions = Partial<\n  Pick<\n    ToastOptions,\n    \"status\" | \"duration\" | \"position\" | \"id\" | \"onCloseComplete\"\n  >\n>\n\n/**\n * Manages the creation, and removal of toasts\n * across all corners (\"top\", \"bottom\", etc.)\n */\nexport class ToastManager extends React.Component<Props, State> {\n  /**\n   * Static id counter to create unique ids\n   * for each toast\n   */\n  static counter = 0\n\n  /**\n   * State to track all the toast across all positions\n   */\n  state: State = {\n    top: [],\n    \"top-left\": [],\n    \"top-right\": [],\n    \"bottom-left\": [],\n    bottom: [],\n    \"bottom-right\": [],\n  }\n\n  constructor(props: Props) {\n    super(props)\n\n    const methods = {\n      notify: this.notify,\n      closeAll: this.closeAll,\n      close: this.closeToast,\n      update: this.updateToast,\n      isActive: this.isVisible,\n    }\n\n    props.notify(methods)\n  }\n\n  /**\n   * Function to actually create a toast and add it\n   * to state at the specified position\n   */\n  notify = (message: ToastMessage, options: CreateToastOptions) => {\n    const toast = this.createToast(message, options)\n    const { position, id } = toast\n\n    this.setState((prevToasts) => {\n      const isTop = position.includes(\"top\")\n\n      /**\n       * - If the toast is positioned at the top edges, the\n       * recent toast stacks on top of the other toasts.\n       *\n       * - If the toast is positioned at the bottom edges, the recent\n       * toast stacks below the other toasts.\n       */\n      const toasts = isTop\n        ? [toast, ...prevToasts[position]]\n        : [...prevToasts[position], toast]\n\n      return {\n        ...prevToasts,\n        [position]: toasts,\n      }\n    })\n\n    return id\n  }\n\n  /**\n   * Update a specific toast with new options based on the\n   * passed `id`\n   */\n  updateToast = (id: ToastId, options: CreateToastOptions) => {\n    this.setState((prevState) => {\n      const nextState = { ...prevState }\n      const { position, index } = findToast(nextState, id)\n\n      if (position && index !== -1) {\n        nextState[position][index] = {\n          ...nextState[position][index],\n          ...options,\n        }\n      }\n\n      return nextState\n    })\n  }\n\n  /**\n   * Close all toasts at once.\n   * If given positions, will only close those.\n   */\n  closeAll = ({ positions }: CloseAllToastsOptions = {}) => {\n    // only one setState here for perf reasons\n    // instead of spamming this.closeToast\n    this.setState((prev) => {\n      const allPositions: ToastPosition[] = [\n        \"bottom\",\n        \"bottom-right\",\n        \"bottom-left\",\n        \"top\",\n        \"top-left\",\n        \"top-right\",\n      ]\n\n      const positionsToClose = positions ?? allPositions\n\n      return positionsToClose.reduce((acc, position) => {\n        acc[position] = prev[position].map((toast) => ({\n          ...toast,\n          requestClose: true,\n        }))\n\n        return acc\n      }, {})\n    })\n  }\n\n  /**\n   * Create properties for a new toast\n   */\n  createToast = (message: ToastMessage, options: CreateToastOptions) => {\n    ToastManager.counter += 1\n    const id = options.id ?? ToastManager.counter\n\n    const position = options.position ?? \"top\"\n\n    return {\n      id,\n      message,\n      position,\n      duration: options.duration,\n      onCloseComplete: options.onCloseComplete,\n      onRequestRemove: () => this.removeToast(String(id), position),\n      status: options.status,\n      requestClose: false,\n    }\n  }\n\n  /**\n   * Requests to close a toast based on its id and position\n   */\n  closeToast = (id: ToastId) => {\n    this.setState((prevState) => {\n      const position = getToastPosition(prevState, id)\n\n      if (!position) return prevState\n\n      return {\n        ...prevState,\n        [position]: prevState[position].map((toast) => {\n          // id may be string or number\n          // eslint-disable-next-line eqeqeq\n          if (toast.id == id) {\n            return {\n              ...toast,\n              requestClose: true,\n            }\n          }\n\n          return toast\n        }),\n      }\n    })\n  }\n\n  /**\n   * Delete a toast record at its position\n   */\n  removeToast = (id: ToastId, position: ToastPosition) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      // id may be string or number\n      // eslint-disable-next-line eqeqeq\n      [position]: prevState[position].filter((toast) => toast.id != id),\n    }))\n  }\n\n  isVisible = (id: ToastId) => {\n    const { position } = findToast(this.state, id)\n    return Boolean(position)\n  }\n\n  /**\n   * Compute the style of a toast based on its position\n   */\n  getStyle = (position: ToastPosition): React.CSSProperties => {\n    const isTopOrBottom = position === \"top\" || position === \"bottom\"\n    const margin = isTopOrBottom ? \"0 auto\" : undefined\n\n    const top = position.includes(\"top\")\n      ? \"env(safe-area-inset-top, 0px)\"\n      : undefined\n    const bottom = position.includes(\"bottom\")\n      ? \"env(safe-area-inset-bottom, 0px)\"\n      : undefined\n    const right = !position.includes(\"left\")\n      ? \"env(safe-area-inset-right, 0px)\"\n      : undefined\n    const left = !position.includes(\"right\")\n      ? \"env(safe-area-inset-left, 0px)\"\n      : undefined\n\n    return {\n      position: \"fixed\",\n      zIndex: 5500,\n      pointerEvents: \"none\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      margin,\n      top,\n      bottom,\n      right,\n      left,\n    }\n  }\n\n  render() {\n    return objectKeys(this.state).map((position) => {\n      const toasts = this.state[position]\n      return (\n        <ul\n          key={position}\n          id={`chakra-toast-manager-${position}`}\n          style={this.getStyle(position)}\n        >\n          <AnimatePresence initial={false}>\n            {toasts.map((toast) => (\n              <Toast key={toast.id} {...toast} />\n            ))}\n          </AnimatePresence>\n        </ul>\n      )\n    })\n  }\n}\n","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import { isBrowser } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { render } from \"react-dom\"\nimport { ToastMethods, ToastManager } from \"./toast-manager\"\nimport type {\n  CloseAllToastsOptions,\n  ToastId,\n  ToastMessage,\n  ToastOptions,\n} from \"./toast.types\"\n\nconst portalId = \"chakra-toast-portal\"\n\nclass Toaster {\n  private createToast?: ToastMethods[\"notify\"]\n  private removeAll?: ToastMethods[\"closeAll\"]\n  private closeToast?: ToastMethods[\"close\"]\n  private updateToast?: ToastMethods[\"update\"]\n  private isToastActive?: ToastMethods[\"isActive\"]\n\n  /**\n   * Initialize the manager and mount it in the DOM\n   * inside the portal node.\n   *\n   * @todo\n   *\n   * Update toast constructor to use `PortalManager`'s node or document.body.\n   * Once done, we can remove the `zIndex` in `toast.manager.tsx`\n   */\n  constructor() {\n    if (!isBrowser) return\n\n    let portal: HTMLElement\n    const existingPortal = document.getElementById(portalId)\n\n    if (existingPortal) {\n      portal = existingPortal\n    } else {\n      const div = document.createElement(\"div\")\n      div.id = portalId\n      document.body?.appendChild(div)\n      portal = div\n    }\n\n    render(<ToastManager notify={this.bindFunctions} />, portal)\n  }\n\n  private bindFunctions = (methods: ToastMethods) => {\n    this.createToast = methods.notify\n    this.removeAll = methods.closeAll\n    this.closeToast = methods.close\n    this.updateToast = methods.update\n    this.isToastActive = methods.isActive\n  }\n\n  notify = (message: ToastMessage, options: Partial<ToastOptions> = {}) =>\n    this.createToast?.(message, options)\n\n  close = (id: ToastId) => {\n    this.closeToast?.(id)\n  }\n\n  closeAll = (options?: CloseAllToastsOptions) => {\n    this.removeAll?.(options)\n  }\n\n  update = (id: ToastId, options: Partial<ToastOptions> = {}) => {\n    this.updateToast?.(id, options)\n  }\n\n  isActive = (id: ToastId) => this.isToastActive?.(id)\n}\n\nexport const toast = new Toaster()\n","import type { AlertStatus } from \"@chakra-ui/alert\"\nimport {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n} from \"@chakra-ui/alert\"\nimport { CloseButton } from \"@chakra-ui/close-button\"\nimport {\n  chakra,\n  ColorMode,\n  ColorModeContext,\n  ThemeProvider,\n  useChakra,\n} from \"@chakra-ui/system\"\nimport defaultTheme from \"@chakra-ui/theme\"\nimport { isFunction, noop } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { toast } from \"./toast.class\"\nimport { RenderProps, ToastId, ToastOptions } from \"./toast.types\"\n\nexport interface UseToastOptions {\n  /**\n   * The placement of the toast\n   *\n   * @default \"bottom\"\n   */\n  position?: ToastOptions[\"position\"]\n  /**\n   * The delay before the toast hides (in milliseconds)\n   * If set to `null`, toast will never dismiss.\n   *\n   * @default 5000 ( = 5000ms )\n   */\n  duration?: ToastOptions[\"duration\"]\n  /**\n   * Render a component toast component.\n   * Any component passed will receive 2 props: `id` and `onClose`.\n   */\n  render?(props: RenderProps): React.ReactNode\n  /**\n   * The title of the toast\n   */\n  title?: React.ReactNode\n  /**\n   * The description of the toast\n   */\n  description?: React.ReactNode\n  /**\n   * If `true`, toast will show a close button\n   */\n  isClosable?: boolean\n  /**\n   * The alert component `variant` to use\n   */\n  variant?: string\n  /**\n   * The status of the toast.\n   */\n  status?: AlertStatus\n  /**\n   * The `id` of the toast.\n   *\n   * Mostly used when you need to prevent duplicate.\n   * By default, we generate a unique `id` for each toast\n   */\n  id?: ToastId\n  /**\n   * Callback function to run side effects after the toast has closed.\n   */\n  onCloseComplete?: () => void\n}\n\nexport type IToast = UseToastOptions\n\nconst Toast: React.FC<any> = (props) => {\n  const { status, variant, id, title, isClosable, onClose, description } = props\n\n  return (\n    <Alert\n      status={status}\n      variant={variant}\n      id={id}\n      alignItems=\"start\"\n      borderRadius=\"md\"\n      boxShadow=\"lg\"\n      paddingEnd={8}\n      textAlign=\"start\"\n      width=\"auto\"\n    >\n      <AlertIcon />\n      <chakra.div flex=\"1\">\n        {title && <AlertTitle>{title}</AlertTitle>}\n        {description && (\n          <AlertDescription display=\"block\">{description}</AlertDescription>\n        )}\n      </chakra.div>\n      {isClosable && (\n        <CloseButton\n          size=\"sm\"\n          onClick={onClose}\n          position=\"absolute\"\n          insetEnd={1}\n          top={1}\n        />\n      )}\n    </Alert>\n  )\n}\n\nconst defaults = {\n  duration: 5000,\n  position: \"bottom\",\n  variant: \"solid\",\n} as const\n\nexport type CreateStandAloneToastParam = Partial<\n  {\n    setColorMode: (value: ColorMode) => void\n  } & ReturnType<typeof useChakra> & { defaultOptions: UseToastOptions }\n>\n\nexport const defaultStandaloneParam: Required<CreateStandAloneToastParam> = {\n  theme: defaultTheme,\n  colorMode: \"light\",\n  toggleColorMode: noop,\n  setColorMode: noop,\n  defaultOptions: defaults,\n}\n/**\n * Create a toast from outside of React Components\n */\nexport function createStandaloneToast({\n  theme = defaultStandaloneParam.theme,\n  colorMode = defaultStandaloneParam.colorMode,\n  toggleColorMode = defaultStandaloneParam.toggleColorMode,\n  setColorMode = defaultStandaloneParam.setColorMode,\n  defaultOptions = defaultStandaloneParam.defaultOptions,\n}: CreateStandAloneToastParam = defaultStandaloneParam) {\n  const renderWithProviders = (\n    props: React.PropsWithChildren<RenderProps>,\n    options: UseToastOptions,\n  ) => (\n    <ThemeProvider theme={theme}>\n      <ColorModeContext.Provider\n        value={{ colorMode, setColorMode, toggleColorMode }}\n      >\n        {isFunction(options.render) ? (\n          options.render(props)\n        ) : (\n          <Toast {...props} {...options} />\n        )}\n      </ColorModeContext.Provider>\n    </ThemeProvider>\n  )\n\n  const toastImpl = (options?: UseToastOptions) => {\n    const opts = { ...defaultOptions, ...options }\n\n    const Message: React.FC<RenderProps> = (props) =>\n      renderWithProviders(props, opts)\n\n    return toast.notify(Message, opts)\n  }\n\n  toastImpl.close = toast.close\n  toastImpl.closeAll = toast.closeAll\n\n  // toasts can only be updated if they have a valid id\n  toastImpl.update = (id: ToastId, options: Omit<UseToastOptions, \"id\">) => {\n    if (!id) return\n\n    const opts = { ...defaultOptions, ...options }\n\n    toast.update(id, {\n      ...opts,\n      message: (props) => renderWithProviders(props, opts),\n    })\n  }\n\n  toastImpl.isActive = toast.isActive\n\n  return toastImpl\n}\n\n/**\n * React hook used to create a function that can be used\n * to show toasts in an application.\n */\nexport function useToast(options?: UseToastOptions) {\n  const { theme, setColorMode, toggleColorMode, colorMode } = useChakra()\n  return React.useMemo(\n    () =>\n      createStandaloneToast({\n        theme,\n        colorMode,\n        setColorMode,\n        toggleColorMode,\n        defaultOptions: options,\n      }),\n    [theme, setColorMode, toggleColorMode, colorMode, options],\n  )\n}\n\nexport default useToast\n","import { ariaAttr, callAllHandlers } from \"@chakra-ui/utils\"\nimport { FocusEventHandler } from \"react\"\nimport { FormControlOptions, useFormControlContext } from \"./form-control\"\n\nexport interface UseFormControlProps<T extends HTMLElement>\n  extends FormControlOptions {\n  id?: string\n  onFocus?: FocusEventHandler<T>\n  onBlur?: FocusEventHandler<T>\n  disabled?: boolean\n  readOnly?: boolean\n  required?: boolean\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n */\nexport function useFormControl<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const {\n    isDisabled,\n    isInvalid,\n    isReadOnly,\n    isRequired,\n    ...rest\n  } = useFormControlProps(props)\n\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly),\n  }\n}\n\nexport function useFormControlProps<T extends HTMLElement>(\n  props: UseFormControlProps<T>,\n) {\n  const field = useFormControlContext()\n\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props\n\n  const labelIds: string[] = []\n\n  // Error message must be described first in all scenarios.\n  if (field?.hasFeedbackText && field?.isInvalid) {\n    labelIds.push(field.feedbackId)\n  }\n\n  if (field?.hasHelpText) {\n    labelIds.push(field.helpTextId)\n  }\n\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id ?? field?.id,\n    isDisabled: disabled ?? isDisabled ?? field?.isDisabled,\n    isReadOnly: readOnly ?? isReadOnly ?? field?.isReadOnly,\n    isRequired: required ?? isRequired ?? field?.isRequired,\n    isInvalid: isInvalid ?? field?.isInvalid,\n    onFocus: callAllHandlers(field?.onFocus, onFocus),\n    onBlur: callAllHandlers(field?.onBlur, onBlur),\n  }\n}\n","import { FormControlOptions, useFormControl } from \"@chakra-ui/form-control\"\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useMultiStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\ninterface InputOptions {\n  /**\n   * The border color when the input is focused. Use color keys in `theme.colors`\n   * @example\n   * focusBorderColor = \"blue.500\"\n   */\n  focusBorderColor?: string\n  /**\n   * The border color when the input is invalid. Use color keys in `theme.colors`\n   * @example\n   * errorBorderColor = \"red.500\"\n   */\n  errorBorderColor?: string\n  /**\n   * If `true`, the input element will span the full width of its parent\n   *\n   * @deprecated\n   * This component defaults to 100% width,\n   *  please use the props `maxWidth` or `width` to configure\n   */\n  isFullWidth?: boolean\n}\n\ntype Omitted = \"disabled\" | \"required\" | \"readOnly\" | \"size\"\n\nexport interface InputProps\n  extends Omit<HTMLChakraProps<\"input\">, Omitted>,\n    InputOptions,\n    ThemingProps<\"Input\">,\n    FormControlOptions {}\n\n/**\n * Input\n *\n * Element that allows users enter single valued data.\n */\nexport const Input = forwardRef<InputProps, \"input\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Input\", props)\n  const ownProps = omitThemingProps(props)\n  const input = useFormControl<HTMLInputElement>(ownProps)\n  const _className = cx(\"chakra-input\", props.className)\n\n  return (\n    <chakra.input\n      {...input}\n      __css={styles.field}\n      ref={ref}\n      className={_className}\n    />\n  )\n})\n\nif (__DEV__) {\n  Input.displayName = \"Input\"\n}\n\n// This is used in `input-group.tsx`\nInput.id = \"Input\"\n"],"sourceRoot":""}